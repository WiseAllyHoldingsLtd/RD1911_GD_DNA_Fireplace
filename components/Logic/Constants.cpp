#include "Constants.h"

#if IS_PRODUCTION_VERSION
//const char Constants::DISCOVERY_URL[] = "https://discovery.gdhv-iot.com/api/hub/registry";
//const char Constants::HEALTHCHECK_URL[] = "https://healthcheck.gdhv-iot.com/api/health/overall";
const char Constants::DISCOVERY_URL[] = "https://app-discovery-gdhv.azurewebsites.net/api/hub/registry";
const char Constants::HEALTHCHECK_URL[] = "https://app-healthcheck-gdhv.azurewebsites.net/api/health/overall";
#else
const char Constants::DISCOVERY_URL[] = "https://gdchubproxyuat.azurewebsites.net/api/hub/registry";
const char Constants::HEALTHCHECK_URL[] = "https://gdchealthcheckuat508.azurewebsites.net/api/health/overall";
#endif

const char Constants::NTP_URL1[] = "pool.ntp.org";
const char Constants::NTP_URL2[] = "time.google.com";

const char Constants::DEFAULT_WIFI_SSID[] = "";
const char Constants::DEFAULT_WIFI_PASSWORD[] = "";
const char Constants::DEFAULT_GDID[] = "000000000000";

const DateTime Constants::DEFAULT_DATETIME =
{
  0, /* year - assuming 2018 */
  1, /* month */
  1, /* day */
  0, /* hour */
  0, /* minutes */
  0, /* seconds */
  WeekDay::MONDAY
};

const uint8_t Constants::DEFAULT_WEEK_PROGRAM_DATA[Constants::WEEKPROGRAM_STORAGE_SIZE_PER_DAY] =
{
    // First slot
    Constants::CLOUD_PARAMETER_INVALID_VALUE,
    Constants::CLOUD_PARAMETER_INVALID_VALUE,
    Constants::CLOUD_PARAMETER_INVALID_VALUE,
    Constants::CLOUD_PARAMETER_INVALID_VALUE,
    Constants::CLOUD_PARAMETER_INVALID_VALUE,

    // Other slots // TODO can we remove these and only store one invalid slot..?
    Constants::CLOUD_PARAMETER_INVALID_VALUE, 0u, 0u, 0U, 0U,
    Constants::CLOUD_PARAMETER_INVALID_VALUE, 0u, 0u, 0U, 0U,
    Constants::CLOUD_PARAMETER_INVALID_VALUE, 0u, 0u, 0U, 0U
};

const uint8_t Constants::DEFAULT_WEEK_PROGRAM_EXT_DATA[Constants::WEEKPROGRAM_SLOT_SIZE] =
{
    0u, 0u, 0u, 0u, static_cast<uint8_t>(Constants::CLOUD_PARAMETER_INVALID_VALUE)
};

const uint8_t Constants::WEEKPROGRAM_STORAGE_SIZE_PER_DAY_EXT_MAX = (WEEKPROGRAM_SLOTS_PER_WEEKDAY_EXT_MAX * WEEKPROGRAM_SLOT_SIZE);

uint8_t Constants::WIFI_SETUP_UUID[] =
{
   0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
   0x00u, 0x80u,
   0x00u, 0x10u,
   0x00u, 0x00u, 0x00u, 0x50u, 0x00u, 0x00u
};

uint8_t Constants::SSID_UUID[] =
{
  0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
  0x00u, 0x80u,
  0x00u, 0x10u,
  0x00u, 0x00u, 0x01u, 0x50u, 0x00u, 0x00u
};

uint8_t Constants::PASSWORD_UUID[] =
{
    0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
    0x00u, 0x80u,
    0x00u, 0x10u,
    0x00u, 0x00u, 0x02u, 0x50u, 0x00u, 0x00u
};

uint8_t Constants::STATIC_IP_UUID[] =
{
  0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
  0x00u, 0x80u,
  0x00u, 0x10u,
  0x00u, 0x00u, 0x03u, 0x50u, 0x00u, 0x00u
};

uint8_t Constants::STATIC_NETMASK_UUID[] =
{
  0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
  0x00u, 0x80u,
  0x00u, 0x10u,
  0x00u, 0x00u, 0x04u, 0x50u, 0x00u, 0x00u
};

uint8_t Constants::STATIC_GATEWAY_UUID[] =
{
  0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
  0x00u, 0x80u,
  0x00u, 0x10u,
  0x00u, 0x00u, 0x05u, 0x50u, 0x00u, 0x00u
};

uint8_t Constants::STATIC_DNS1_UUID[] =
{
  0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
  0x00u, 0x80u,
  0x00u, 0x10u,
  0x00u, 0x00u, 0x06u, 0x50u, 0x00u, 0x00u
};

uint8_t Constants::STATIC_DNS2_UUID[] =
{
  0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
  0x00u, 0x80u,
  0x00u, 0x10u,
  0x00u, 0x00u, 0x07u, 0x50u, 0x00u, 0x00u
};

uint8_t Constants::PROXY_SERVER_UUID[] =
{
  0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
  0x00u, 0x80u,
  0x00u, 0x10u,
  0x00u, 0x00u, 0x08u, 0x50u, 0x00u, 0x00u
};

uint8_t Constants::PROXY_PORT_UUID[] =
{
  0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
  0x00u, 0x80u,
  0x00u, 0x10u,
  0x00u, 0x00u, 0x09u, 0x50u, 0x00u, 0x00u
};

uint8_t Constants::PROXY_USERNAME_UUID[] =
{
  0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
  0x00u, 0x80u,
  0x00u, 0x10u,
  0x00u, 0x00u, 0x10u, 0x50u, 0x00u, 0x00u
};

uint8_t Constants::PROXY_PASSWORD_UUID[] =
{
  0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
  0x00u, 0x80u,
  0x00u, 0x10u,
  0x00u, 0x00u, 0x11u, 0x50u, 0x00u, 0x00u
};

uint8_t Constants::CONNECTION_STATUS_UUID[] =
{
  0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
  0x00u, 0x80u,
  0x00u, 0x10u,
  0x00u, 0x00u, 0x12u, 0x50u, 0x00u, 0x00u
};

uint8_t Constants::CONNECTION_STATUS_STRING_UUID[] =
{
  0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
  0x00u, 0x80u,
  0x00u, 0x10u,
  0x00u, 0x00u, 0x13u, 0x50u, 0x00u, 0x00u
};

uint8_t Constants::CONNECTION_TYPE_UUID[] =
{
  0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
  0x00u, 0x80u,
  0x00u, 0x10u,
  0x00u, 0x00u, 0x14u, 0x50u, 0x00u, 0x00u
};

uint8_t Constants::DHCP_STATIC_IP_UUID[] =
{
  0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
  0x00u, 0x80u,
  0x00u, 0x10u,
  0x00u, 0x00u, 0x15u, 0x50u, 0x00u, 0x00u
};

uint8_t Constants::DHCP_MANUAL_PROXY_UUID[] =
{
  0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
  0x00u, 0x80u,
  0x00u, 0x10u,
  0x00u, 0x00u, 0x16u, 0x50u, 0x00u, 0x00u
};

// FGT
uint8_t Constants::FGT_CONFIG_UUID[] =
{
  0xfbu, 0x34u, 0x9bu, 0x5fu, 0x80u, 0x00u,
  0x00u, 0x80u,
  0x00u, 0x10u,
  0x03u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u
};

uint8_t Constants::LCD_UUID[] 		= {  0x01u, 0x00u };
uint8_t Constants::TRIAC_UUID[] 	= {  0x02u, 0x00u };
uint8_t Constants::NTC_UUID[]     = {  0x08u, 0x00u };
uint8_t Constants::EOLT_UUID[] 		= {  0x10u, 0x10u };
uint8_t Constants::TEST_MODE_UUID[] = {  0x20u, 0x10u };
uint8_t Constants::PASSKEY_UUID[] = {  0x06u, 0x20u };
uint8_t Constants::GDID_UUID[] 		= {  0x02u, 0x20u };
uint8_t Constants::FULL_INFO_UUID[] = {  0x0Eu, 0x20u };
uint8_t Constants::SW_VER_UUID[]  = {  0x01u, 0x20u };
uint8_t Constants::OTA_EN_UUID[]  = {  0x0Eu, 0x10u };
uint8_t Constants::BOOTLOADER_COMMAND[] =
{
  0x1Cu, 0xC5u, 0xD5u, 0xA5u, 0x02u, 0x00u,
  0xF4u, 0xABu,
  0xE4u, 0x11u,
  0xCEu, 0xF8u, 0x01u, 0x00u, 0x06u, 0x00u
};

uint8_t Constants::WIFI_STATUS_UUID[] = { 0x31u, 0x10 };

/* The partition name constants must match the names of the custom nvs partitions in partition_table.csv */
const char Constants::SETTINGS_PARTITION_NAME[] = "settings";
const char Constants::META_PARTITION_NAME[] = "meta";

const char Constants::FGT_WIFI_TEST_SSID[] = "wifi_test_ecu2rw";
const char Constants::FGT_WIFI_TEST_PASSWORD[] = "wifitestecu2rw";

